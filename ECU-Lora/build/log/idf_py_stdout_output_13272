[1/33] Building C object esp-idf/hal/CMakeFiles/__idf_hal.dir/uart_hal.c.obj
[2/33] Building C object esp-idf/esp_rom/CMakeFiles/__idf_esp_rom.dir/patches/esp_rom_uart.c.obj
[3/33] Building C object esp-idf/hal/CMakeFiles/__idf_hal.dir/uart_hal_iram.c.obj
[4/33] Building C object esp-idf/esp_system/CMakeFiles/__idf_esp_system.dir/panic.c.obj
[5/33] Building C object esp-idf/esp_gdbstub/CMakeFiles/__idf_esp_gdbstub.dir/esp_common/gdbstub_common.c.obj
[6/33] Building C object esp-idf/vfs/CMakeFiles/__idf_vfs.dir/vfs_uart.c.obj
[7/33] Building C object esp-idf/esp_hw_support/CMakeFiles/__idf_esp_hw_support.dir/sleep_modes.c.obj
[8/33] Linking C static library esp-idf\esp_gdbstub\libesp_gdbstub.a
[9/33] Building C object esp-idf/esp_system/CMakeFiles/__idf_esp_system.dir/startup.c.obj
[10/33] Linking C static library esp-idf\vfs\libvfs.a
[11/33] Linking C static library esp-idf\esp_hw_support\libesp_hw_support.a
[12/33] Linking C static library esp-idf\hal\libhal.a
[13/33] Linking C static library esp-idf\esp_rom\libesp_rom.a
[14/33] Linking C static library esp-idf\esp_system\libesp_system.a
[15/33] Building C object esp-idf/app_trace/CMakeFiles/__idf_app_trace.dir/port/port_uart.c.obj
[16/33] Performing build step for 'bootloader'
[1/5] Building C object esp-idf/esp_rom/CMakeFiles/__idf_esp_rom.dir/patches/esp_rom_uart.c.obj
[2/5] Linking C static library esp-idf\esp_rom\libesp_rom.a
[3/5] Linking C executable bootloader.elf
[4/5] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 1 ELF section
Successfully created esp32 image.
Generated C:/Espressif/frameworks/esp-idf-v5.0.2/BAJA/FoxBaja-Eletronica-FX4.0/ECU-Lora/build/bootloader/bootloader.bin
[5/5] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0.2\BAJA\FoxBaja-Eletronica-FX4.0\ECU-Lora\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Espressif/frameworks/esp-idf-v5.0.2/BAJA/FoxBaja-Eletronica-FX4.0/ECU-Lora/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[17/31] Building C object esp-idf/esp_pm/CMakeFiles/__idf_esp_pm.dir/pm_impl.c.obj
[18/31] Building C object esp-idf/protocomm/CMakeFiles/__idf_protocomm.dir/src/transports/protocomm_console.c.obj
[19/31] Building C object esp-idf/console/CMakeFiles/__idf_console.dir/esp_console_repl.c.obj
[20/31] Building C object esp-idf/driver/CMakeFiles/__idf_driver.dir/uart.c.obj
[21/31] Linking C static library esp-idf\esp_pm\libesp_pm.a
[22/31] Linking C static library esp-idf\driver\libdriver.a
[23/31] Linking C static library esp-idf\app_trace\libapp_trace.a
[24/31] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
In file included from C:/Espressif/frameworks/esp-idf-v5.0.2/BAJA/FoxBaja-Eletronica-FX4.0/ECU-Lora/main/main.c:29:
C:/Espressif/frameworks/esp-idf-v5.0.2/components/driver/deprecated/driver/adc.h:19:2: warning: #warning "legacy adc driver is deprecated, please migrate to use esp_adc/adc_oneshot.h and esp_adc/adc_continuous.h for oneshot mode and continuous mode drivers respectively" [-Wcpp]
   19 | #warning "legacy adc driver is deprecated, please migrate to use esp_adc/adc_oneshot.h and esp_adc/adc_continuous.h for oneshot mode and continuous mode drivers respectively"
      |  ^~~~~~~
C:/Espressif/frameworks/esp-idf-v5.0.2/BAJA/FoxBaja-Eletronica-FX4.0/ECU-Lora/main/main.c: In function 'app_main':
C:/Espressif/frameworks/esp-idf-v5.0.2/BAJA/FoxBaja-Eletronica-FX4.0/ECU-Lora/main/main.c:290:23: warning: unused variable 'uart_num' [-Wunused-variable]
  290 |     const uart_port_t uart_num = UART_NUM_0;
      |                       ^~~~~~~~
At top level:
C:/Espressif/frameworks/esp-idf-v5.0.2/BAJA/FoxBaja-Eletronica-FX4.0/ECU-Lora/main/main.c:81:23: warning: 'data_message' defined but not used [-Wunused-variable]
   81 | static twai_message_t data_message = {.identifier = ID_SLAVE2_DATA, .data_length_code = 4,
      |                       ^~~~~~~~~~~~
[25/31] Linking C static library esp-idf\console\libconsole.a
[26/31] Linking C static library esp-idf\main\libmain.a
[27/31] Linking C static library esp-idf\protocomm\libprotocomm.a
[28/31] Generating ld/sections.ld
[29/31] Linking CXX executable ECU-Recebe.elf
[30/31] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Espressif/frameworks/esp-idf-v5.0.2/BAJA/FoxBaja-Eletronica-FX4.0/ECU-Lora/build/ECU-Recebe.bin
[31/31] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0.2\BAJA\FoxBaja-Eletronica-FX4.0\ECU-Lora\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Espressif/frameworks/esp-idf-v5.0.2/BAJA/FoxBaja-Eletronica-FX4.0/ECU-Lora/build/partition_table/partition-table.bin C:/Espressif/frameworks/esp-idf-v5.0.2/BAJA/FoxBaja-Eletronica-FX4.0/ECU-Lora/build/ECU-Recebe.bin"
ECU-Recebe.bin binary size 0x336c0 bytes. Smallest app partition is 0x100000 bytes. 0xcc940 bytes (80%) free.
